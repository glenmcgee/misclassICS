// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// compute_Omega
NumericVector compute_Omega(NumericVector gamma, NumericVector sigma, NumericVector zeta, NumericVector GH_w, NumericVector GH_z);
RcppExport SEXP _JMMICSpack_compute_Omega(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP zetaSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_Omega(gamma, sigma, zeta, GH_w, GH_z));
    return rcpp_result_gen;
END_RCPP
}
// compute_Delta
NumericVector compute_Delta(NumericVector sigma, NumericVector eta, NumericVector GH_w, NumericVector GH_z);
RcppExport SEXP _JMMICSpack_compute_Delta(SEXP sigmaSEXP, SEXP etaSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_Delta(sigma, eta, GH_w, GH_z));
    return rcpp_result_gen;
END_RCPP
}
// compute_logLik_JMMICS
double compute_logLik_JMMICS(NumericVector gamma, NumericVector sigma, NumericVector Omega, NumericVector Delta, NumericVector Nk, NumericVector Nk_actual, NumericVector Yki, NumericVector IDk, NumericVector Wki, int minNk, NumericVector GH_w, NumericVector GH_z);
RcppExport SEXP _JMMICSpack_compute_logLik_JMMICS(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP YkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_logLik_JMMICS(gamma, sigma, Omega, Delta, Nk, Nk_actual, Yki, IDk, Wki, minNk, GH_w, GH_z));
    return rcpp_result_gen;
END_RCPP
}
// compute_score_JMMICS
NumericVector compute_score_JMMICS(NumericVector gamma, NumericVector sigma, NumericVector Omega, NumericVector Delta, NumericVector zeta, NumericVector eta, NumericVector Nk, NumericVector Nk_actual, NumericMatrix Zk, NumericVector Yki, NumericMatrix Xki, NumericVector IDk, NumericVector Wki, int minNk, bool condSize, bool condOut, NumericVector GH_w, NumericVector GH_z, int len_alpha, int len_beta);
RcppExport SEXP _JMMICSpack_compute_score_JMMICS(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP zetaSEXP, SEXP etaSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP ZkSEXP, SEXP YkiSEXP, SEXP XkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP condSizeSEXP, SEXP condOutSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP, SEXP len_alphaSEXP, SEXP len_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Zk(ZkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xki(XkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< bool >::type condSize(condSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type condOut(condOutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    Rcpp::traits::input_parameter< int >::type len_alpha(len_alphaSEXP);
    Rcpp::traits::input_parameter< int >::type len_beta(len_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_score_JMMICS(gamma, sigma, Omega, Delta, zeta, eta, Nk, Nk_actual, Zk, Yki, Xki, IDk, Wki, minNk, condSize, condOut, GH_w, GH_z, len_alpha, len_beta));
    return rcpp_result_gen;
END_RCPP
}
// compute_score_JMMICS_slopes
NumericVector compute_score_JMMICS_slopes(NumericVector gamma, NumericVector sigma, NumericVector Omega, NumericVector Delta, NumericVector zeta, NumericVector eta, NumericVector rand_indic, NumericVector Nk, NumericVector Nk_actual, NumericMatrix Zk, NumericVector Yki, NumericMatrix Xki, NumericVector IDk, NumericVector Wki, int minNk, bool condSize, bool condOut, NumericVector GH_w, NumericVector GH_z, int len_alpha, int len_beta);
RcppExport SEXP _JMMICSpack_compute_score_JMMICS_slopes(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP zetaSEXP, SEXP etaSEXP, SEXP rand_indicSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP ZkSEXP, SEXP YkiSEXP, SEXP XkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP condSizeSEXP, SEXP condOutSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP, SEXP len_alphaSEXP, SEXP len_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rand_indic(rand_indicSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Zk(ZkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xki(XkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< bool >::type condSize(condSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type condOut(condOutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    Rcpp::traits::input_parameter< int >::type len_alpha(len_alphaSEXP);
    Rcpp::traits::input_parameter< int >::type len_beta(len_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_score_JMMICS_slopes(gamma, sigma, Omega, Delta, zeta, eta, rand_indic, Nk, Nk_actual, Zk, Yki, Xki, IDk, Wki, minNk, condSize, condOut, GH_w, GH_z, len_alpha, len_beta));
    return rcpp_result_gen;
END_RCPP
}
// compute_cheese_JMMICS
NumericMatrix compute_cheese_JMMICS(NumericVector gamma, NumericVector sigma, NumericVector Omega, NumericVector Delta, NumericVector zeta, NumericVector eta, NumericVector Nk, NumericVector Nk_actual, NumericMatrix Zk, NumericVector Yki, NumericMatrix Xki, NumericVector IDk, NumericVector Wki, int minNk, bool condSize, bool condOut, NumericVector GH_w, NumericVector GH_z, int len_alpha, int len_beta);
RcppExport SEXP _JMMICSpack_compute_cheese_JMMICS(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP zetaSEXP, SEXP etaSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP ZkSEXP, SEXP YkiSEXP, SEXP XkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP condSizeSEXP, SEXP condOutSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP, SEXP len_alphaSEXP, SEXP len_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Zk(ZkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xki(XkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< bool >::type condSize(condSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type condOut(condOutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    Rcpp::traits::input_parameter< int >::type len_alpha(len_alphaSEXP);
    Rcpp::traits::input_parameter< int >::type len_beta(len_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_cheese_JMMICS(gamma, sigma, Omega, Delta, zeta, eta, Nk, Nk_actual, Zk, Yki, Xki, IDk, Wki, minNk, condSize, condOut, GH_w, GH_z, len_alpha, len_beta));
    return rcpp_result_gen;
END_RCPP
}
// compute_cheese_JMMICS_slopes
NumericMatrix compute_cheese_JMMICS_slopes(NumericVector gamma, NumericVector sigma, NumericVector Omega, NumericVector Delta, NumericVector zeta, NumericVector eta, NumericVector rand_indic, NumericVector Nk, NumericVector Nk_actual, NumericMatrix Zk, NumericVector Yki, NumericMatrix Xki, NumericVector IDk, NumericVector Wki, int minNk, bool condSize, bool condOut, NumericVector GH_w, NumericVector GH_z, int len_alpha, int len_beta);
RcppExport SEXP _JMMICSpack_compute_cheese_JMMICS_slopes(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP zetaSEXP, SEXP etaSEXP, SEXP rand_indicSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP ZkSEXP, SEXP YkiSEXP, SEXP XkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP condSizeSEXP, SEXP condOutSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP, SEXP len_alphaSEXP, SEXP len_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rand_indic(rand_indicSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Zk(ZkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xki(XkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< bool >::type condSize(condSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type condOut(condOutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    Rcpp::traits::input_parameter< int >::type len_alpha(len_alphaSEXP);
    Rcpp::traits::input_parameter< int >::type len_beta(len_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_cheese_JMMICS_slopes(gamma, sigma, Omega, Delta, zeta, eta, rand_indic, Nk, Nk_actual, Zk, Yki, Xki, IDk, Wki, minNk, condSize, condOut, GH_w, GH_z, len_alpha, len_beta));
    return rcpp_result_gen;
END_RCPP
}
// compute_EB_JMMICS
NumericVector compute_EB_JMMICS(NumericVector gamma, NumericVector sigma, NumericVector Omega, NumericVector Delta, NumericVector Nk, NumericVector Nk_actual, NumericVector Yki, NumericVector IDk, NumericVector Wki, int minNk, NumericVector GH_w, NumericVector GH_z);
RcppExport SEXP _JMMICSpack_compute_EB_JMMICS(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP YkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_EB_JMMICS(gamma, sigma, Omega, Delta, Nk, Nk_actual, Yki, IDk, Wki, minNk, GH_w, GH_z));
    return rcpp_result_gen;
END_RCPP
}
// compute_logLik_JMMICS_NegBin
double compute_logLik_JMMICS_NegBin(NumericVector gamma, NumericVector sigma, double tau, NumericVector Omega, NumericVector Delta, NumericVector Nk, NumericVector Nk_actual, NumericVector Yki, NumericVector IDk, NumericVector Wki, int minNk, NumericVector GH_w, NumericVector GH_z);
RcppExport SEXP _JMMICSpack_compute_logLik_JMMICS_NegBin(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP tauSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP YkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_logLik_JMMICS_NegBin(gamma, sigma, tau, Omega, Delta, Nk, Nk_actual, Yki, IDk, Wki, minNk, GH_w, GH_z));
    return rcpp_result_gen;
END_RCPP
}
// compute_score_JMMICS_NegBin
NumericVector compute_score_JMMICS_NegBin(NumericVector gamma, NumericVector sigma, double tau, double DG_tau, NumericVector Omega, NumericVector Delta, NumericVector zeta, NumericVector eta, NumericVector Nk, NumericVector Nk_actual, NumericMatrix Zk, NumericVector Yki, NumericMatrix Xki, NumericVector IDk, NumericVector Wki, int minNk, bool condSize, bool condOut, NumericVector GH_w, NumericVector GH_z, int len_alpha, int len_beta);
RcppExport SEXP _JMMICSpack_compute_score_JMMICS_NegBin(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP tauSEXP, SEXP DG_tauSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP zetaSEXP, SEXP etaSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP ZkSEXP, SEXP YkiSEXP, SEXP XkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP condSizeSEXP, SEXP condOutSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP, SEXP len_alphaSEXP, SEXP len_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type DG_tau(DG_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Zk(ZkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xki(XkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< bool >::type condSize(condSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type condOut(condOutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    Rcpp::traits::input_parameter< int >::type len_alpha(len_alphaSEXP);
    Rcpp::traits::input_parameter< int >::type len_beta(len_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_score_JMMICS_NegBin(gamma, sigma, tau, DG_tau, Omega, Delta, zeta, eta, Nk, Nk_actual, Zk, Yki, Xki, IDk, Wki, minNk, condSize, condOut, GH_w, GH_z, len_alpha, len_beta));
    return rcpp_result_gen;
END_RCPP
}
// compute_score_JMMICS_NegBin_slopes
NumericVector compute_score_JMMICS_NegBin_slopes(NumericVector gamma, NumericVector sigma, double tau, double DG_tau, NumericVector Omega, NumericVector Delta, NumericVector zeta, NumericVector eta, NumericVector rand_indic, NumericVector Nk, NumericVector Nk_actual, NumericMatrix Zk, NumericVector Yki, NumericMatrix Xki, NumericVector IDk, NumericVector Wki, int minNk, bool condSize, bool condOut, NumericVector GH_w, NumericVector GH_z, int len_alpha, int len_beta);
RcppExport SEXP _JMMICSpack_compute_score_JMMICS_NegBin_slopes(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP tauSEXP, SEXP DG_tauSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP zetaSEXP, SEXP etaSEXP, SEXP rand_indicSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP ZkSEXP, SEXP YkiSEXP, SEXP XkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP condSizeSEXP, SEXP condOutSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP, SEXP len_alphaSEXP, SEXP len_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type DG_tau(DG_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rand_indic(rand_indicSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Zk(ZkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xki(XkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< bool >::type condSize(condSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type condOut(condOutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    Rcpp::traits::input_parameter< int >::type len_alpha(len_alphaSEXP);
    Rcpp::traits::input_parameter< int >::type len_beta(len_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_score_JMMICS_NegBin_slopes(gamma, sigma, tau, DG_tau, Omega, Delta, zeta, eta, rand_indic, Nk, Nk_actual, Zk, Yki, Xki, IDk, Wki, minNk, condSize, condOut, GH_w, GH_z, len_alpha, len_beta));
    return rcpp_result_gen;
END_RCPP
}
// compute_cheese_JMMICS_NegBin
NumericMatrix compute_cheese_JMMICS_NegBin(NumericVector gamma, NumericVector sigma, double tau, double DG_tau, NumericVector Omega, NumericVector Delta, NumericVector zeta, NumericVector eta, NumericVector Nk, NumericVector Nk_actual, NumericMatrix Zk, NumericVector Yki, NumericMatrix Xki, NumericVector IDk, NumericVector Wki, int minNk, bool condSize, bool condOut, NumericVector GH_w, NumericVector GH_z, int len_alpha, int len_beta);
RcppExport SEXP _JMMICSpack_compute_cheese_JMMICS_NegBin(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP tauSEXP, SEXP DG_tauSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP zetaSEXP, SEXP etaSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP ZkSEXP, SEXP YkiSEXP, SEXP XkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP condSizeSEXP, SEXP condOutSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP, SEXP len_alphaSEXP, SEXP len_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type DG_tau(DG_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Zk(ZkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xki(XkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< bool >::type condSize(condSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type condOut(condOutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    Rcpp::traits::input_parameter< int >::type len_alpha(len_alphaSEXP);
    Rcpp::traits::input_parameter< int >::type len_beta(len_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_cheese_JMMICS_NegBin(gamma, sigma, tau, DG_tau, Omega, Delta, zeta, eta, Nk, Nk_actual, Zk, Yki, Xki, IDk, Wki, minNk, condSize, condOut, GH_w, GH_z, len_alpha, len_beta));
    return rcpp_result_gen;
END_RCPP
}
// compute_cheese_JMMICS_NegBin_slopes
NumericMatrix compute_cheese_JMMICS_NegBin_slopes(NumericVector gamma, NumericVector sigma, double tau, double DG_tau, NumericVector Omega, NumericVector Delta, NumericVector zeta, NumericVector eta, NumericVector rand_indic, NumericVector Nk, NumericVector Nk_actual, NumericMatrix Zk, NumericVector Yki, NumericMatrix Xki, NumericVector IDk, NumericVector Wki, int minNk, bool condSize, bool condOut, NumericVector GH_w, NumericVector GH_z, int len_alpha, int len_beta);
RcppExport SEXP _JMMICSpack_compute_cheese_JMMICS_NegBin_slopes(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP tauSEXP, SEXP DG_tauSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP zetaSEXP, SEXP etaSEXP, SEXP rand_indicSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP ZkSEXP, SEXP YkiSEXP, SEXP XkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP condSizeSEXP, SEXP condOutSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP, SEXP len_alphaSEXP, SEXP len_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type DG_tau(DG_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rand_indic(rand_indicSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Zk(ZkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xki(XkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< bool >::type condSize(condSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type condOut(condOutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    Rcpp::traits::input_parameter< int >::type len_alpha(len_alphaSEXP);
    Rcpp::traits::input_parameter< int >::type len_beta(len_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_cheese_JMMICS_NegBin_slopes(gamma, sigma, tau, DG_tau, Omega, Delta, zeta, eta, rand_indic, Nk, Nk_actual, Zk, Yki, Xki, IDk, Wki, minNk, condSize, condOut, GH_w, GH_z, len_alpha, len_beta));
    return rcpp_result_gen;
END_RCPP
}
// compute_EB_JMMICS_NegBin
NumericVector compute_EB_JMMICS_NegBin(NumericVector gamma, NumericVector sigma, double tau, NumericVector Omega, NumericVector Delta, NumericVector Nk, NumericVector Nk_actual, NumericVector Yki, NumericVector IDk, NumericVector Wki, int minNk, NumericVector GH_w, NumericVector GH_z);
RcppExport SEXP _JMMICSpack_compute_EB_JMMICS_NegBin(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP tauSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP YkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_EB_JMMICS_NegBin(gamma, sigma, tau, Omega, Delta, Nk, Nk_actual, Yki, IDk, Wki, minNk, GH_w, GH_z));
    return rcpp_result_gen;
END_RCPP
}
// compute_logLik_JMMICS_ZIP
double compute_logLik_JMMICS_ZIP(NumericVector gamma, NumericVector sigma, NumericVector Xi, NumericVector Omega, NumericVector Delta, NumericVector Nk, NumericVector Nk_actual, NumericVector Nk0, NumericVector Yki, NumericVector IDk, NumericVector Wki, int minNk, NumericVector GH_w, NumericVector GH_z);
RcppExport SEXP _JMMICSpack_compute_logLik_JMMICS_ZIP(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP XiSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP Nk0SEXP, SEXP YkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk0(Nk0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_logLik_JMMICS_ZIP(gamma, sigma, Xi, Omega, Delta, Nk, Nk_actual, Nk0, Yki, IDk, Wki, minNk, GH_w, GH_z));
    return rcpp_result_gen;
END_RCPP
}
// compute_score_JMMICS_ZIP
NumericVector compute_score_JMMICS_ZIP(NumericVector gamma, NumericVector sigma, NumericVector Xi, NumericVector Omega, NumericVector Delta, NumericVector theta, NumericVector zeta, NumericVector eta, NumericVector Nk, NumericVector Nk_actual, NumericVector Nk0, NumericMatrix Z0k, NumericMatrix Zk, NumericVector Yki, NumericMatrix Xki, NumericVector IDk, NumericVector Wki, int minNk, bool condSize, bool condOut, NumericVector GH_w, NumericVector GH_z, int len_epsilon, int len_alpha, int len_beta);
RcppExport SEXP _JMMICSpack_compute_score_JMMICS_ZIP(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP XiSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP thetaSEXP, SEXP zetaSEXP, SEXP etaSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP Nk0SEXP, SEXP Z0kSEXP, SEXP ZkSEXP, SEXP YkiSEXP, SEXP XkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP condSizeSEXP, SEXP condOutSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP, SEXP len_epsilonSEXP, SEXP len_alphaSEXP, SEXP len_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk0(Nk0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Z0k(Z0kSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Zk(ZkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xki(XkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< bool >::type condSize(condSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type condOut(condOutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    Rcpp::traits::input_parameter< int >::type len_epsilon(len_epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type len_alpha(len_alphaSEXP);
    Rcpp::traits::input_parameter< int >::type len_beta(len_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_score_JMMICS_ZIP(gamma, sigma, Xi, Omega, Delta, theta, zeta, eta, Nk, Nk_actual, Nk0, Z0k, Zk, Yki, Xki, IDk, Wki, minNk, condSize, condOut, GH_w, GH_z, len_epsilon, len_alpha, len_beta));
    return rcpp_result_gen;
END_RCPP
}
// compute_score_JMMICS_ZIP_slopes
NumericVector compute_score_JMMICS_ZIP_slopes(NumericVector gamma, NumericVector sigma, NumericVector Xi, NumericVector Omega, NumericVector Delta, NumericVector theta, NumericVector zeta, NumericVector eta, NumericVector rand_indic, NumericVector Nk, NumericVector Nk_actual, NumericVector Nk0, NumericMatrix Z0k, NumericMatrix Zk, NumericVector Yki, NumericMatrix Xki, NumericVector IDk, NumericVector Wki, int minNk, bool condSize, bool condOut, NumericVector GH_w, NumericVector GH_z, int len_epsilon, int len_alpha, int len_beta);
RcppExport SEXP _JMMICSpack_compute_score_JMMICS_ZIP_slopes(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP XiSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP thetaSEXP, SEXP zetaSEXP, SEXP etaSEXP, SEXP rand_indicSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP Nk0SEXP, SEXP Z0kSEXP, SEXP ZkSEXP, SEXP YkiSEXP, SEXP XkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP condSizeSEXP, SEXP condOutSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP, SEXP len_epsilonSEXP, SEXP len_alphaSEXP, SEXP len_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rand_indic(rand_indicSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk0(Nk0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Z0k(Z0kSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Zk(ZkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xki(XkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< bool >::type condSize(condSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type condOut(condOutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    Rcpp::traits::input_parameter< int >::type len_epsilon(len_epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type len_alpha(len_alphaSEXP);
    Rcpp::traits::input_parameter< int >::type len_beta(len_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_score_JMMICS_ZIP_slopes(gamma, sigma, Xi, Omega, Delta, theta, zeta, eta, rand_indic, Nk, Nk_actual, Nk0, Z0k, Zk, Yki, Xki, IDk, Wki, minNk, condSize, condOut, GH_w, GH_z, len_epsilon, len_alpha, len_beta));
    return rcpp_result_gen;
END_RCPP
}
// compute_cheese_JMMICS_ZIP
NumericMatrix compute_cheese_JMMICS_ZIP(NumericVector gamma, NumericVector sigma, NumericVector Xi, NumericVector Omega, NumericVector Delta, NumericVector theta, NumericVector zeta, NumericVector eta, NumericVector Nk, NumericVector Nk_actual, NumericVector Nk0, NumericMatrix Z0k, NumericMatrix Zk, NumericVector Yki, NumericMatrix Xki, NumericVector IDk, NumericVector Wki, int minNk, bool condSize, bool condOut, NumericVector GH_w, NumericVector GH_z, int len_epsilon, int len_alpha, int len_beta);
RcppExport SEXP _JMMICSpack_compute_cheese_JMMICS_ZIP(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP XiSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP thetaSEXP, SEXP zetaSEXP, SEXP etaSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP Nk0SEXP, SEXP Z0kSEXP, SEXP ZkSEXP, SEXP YkiSEXP, SEXP XkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP condSizeSEXP, SEXP condOutSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP, SEXP len_epsilonSEXP, SEXP len_alphaSEXP, SEXP len_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk0(Nk0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Z0k(Z0kSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Zk(ZkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xki(XkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< bool >::type condSize(condSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type condOut(condOutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    Rcpp::traits::input_parameter< int >::type len_epsilon(len_epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type len_alpha(len_alphaSEXP);
    Rcpp::traits::input_parameter< int >::type len_beta(len_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_cheese_JMMICS_ZIP(gamma, sigma, Xi, Omega, Delta, theta, zeta, eta, Nk, Nk_actual, Nk0, Z0k, Zk, Yki, Xki, IDk, Wki, minNk, condSize, condOut, GH_w, GH_z, len_epsilon, len_alpha, len_beta));
    return rcpp_result_gen;
END_RCPP
}
// compute_cheese_JMMICS_ZIP_slopes
NumericMatrix compute_cheese_JMMICS_ZIP_slopes(NumericVector gamma, NumericVector sigma, NumericVector Xi, NumericVector Omega, NumericVector Delta, NumericVector theta, NumericVector zeta, NumericVector eta, NumericVector rand_indic, NumericVector Nk, NumericVector Nk_actual, NumericVector Nk0, NumericMatrix Z0k, NumericMatrix Zk, NumericVector Yki, NumericMatrix Xki, NumericVector IDk, NumericVector Wki, int minNk, bool condSize, bool condOut, NumericVector GH_w, NumericVector GH_z, int len_epsilon, int len_alpha, int len_beta);
RcppExport SEXP _JMMICSpack_compute_cheese_JMMICS_ZIP_slopes(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP XiSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP thetaSEXP, SEXP zetaSEXP, SEXP etaSEXP, SEXP rand_indicSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP Nk0SEXP, SEXP Z0kSEXP, SEXP ZkSEXP, SEXP YkiSEXP, SEXP XkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP condSizeSEXP, SEXP condOutSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP, SEXP len_epsilonSEXP, SEXP len_alphaSEXP, SEXP len_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rand_indic(rand_indicSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk0(Nk0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Z0k(Z0kSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Zk(ZkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xki(XkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< bool >::type condSize(condSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type condOut(condOutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    Rcpp::traits::input_parameter< int >::type len_epsilon(len_epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type len_alpha(len_alphaSEXP);
    Rcpp::traits::input_parameter< int >::type len_beta(len_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_cheese_JMMICS_ZIP_slopes(gamma, sigma, Xi, Omega, Delta, theta, zeta, eta, rand_indic, Nk, Nk_actual, Nk0, Z0k, Zk, Yki, Xki, IDk, Wki, minNk, condSize, condOut, GH_w, GH_z, len_epsilon, len_alpha, len_beta));
    return rcpp_result_gen;
END_RCPP
}
// compute_EB_JMMICS_ZIP
NumericVector compute_EB_JMMICS_ZIP(NumericVector gamma, NumericVector sigma, NumericVector Xi, NumericVector Omega, NumericVector Delta, NumericVector Nk, NumericVector Nk_actual, NumericVector Nk0, NumericVector Yki, NumericVector IDk, NumericVector Wki, int minNk, NumericVector GH_w, NumericVector GH_z);
RcppExport SEXP _JMMICSpack_compute_EB_JMMICS_ZIP(SEXP gammaSEXP, SEXP sigmaSEXP, SEXP XiSEXP, SEXP OmegaSEXP, SEXP DeltaSEXP, SEXP NkSEXP, SEXP Nk_actualSEXP, SEXP Nk0SEXP, SEXP YkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP minNkSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk(NkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk0(Nk0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< int >::type minNk(minNkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_EB_JMMICS_ZIP(gamma, sigma, Xi, Omega, Delta, Nk, Nk_actual, Nk0, Yki, IDk, Wki, minNk, GH_w, GH_z));
    return rcpp_result_gen;
END_RCPP
}
// compute_logLik_GLMM
double compute_logLik_GLMM(NumericVector sigma, NumericVector Delta, NumericVector Nk_actual, NumericVector Yki, NumericVector IDk, NumericVector Wki, NumericVector GH_w, NumericVector GH_z);
RcppExport SEXP _JMMICSpack_compute_logLik_GLMM(SEXP sigmaSEXP, SEXP DeltaSEXP, SEXP Nk_actualSEXP, SEXP YkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_logLik_GLMM(sigma, Delta, Nk_actual, Yki, IDk, Wki, GH_w, GH_z));
    return rcpp_result_gen;
END_RCPP
}
// compute_score_GLMM
NumericVector compute_score_GLMM(NumericVector sigma, NumericVector Delta, NumericVector eta, NumericVector Nk_actual, NumericVector Yki, NumericMatrix Xki, NumericVector IDk, NumericVector Wki, bool condOut, NumericVector GH_w, NumericVector GH_z, int len_beta);
RcppExport SEXP _JMMICSpack_compute_score_GLMM(SEXP sigmaSEXP, SEXP DeltaSEXP, SEXP etaSEXP, SEXP Nk_actualSEXP, SEXP YkiSEXP, SEXP XkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP condOutSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP, SEXP len_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xki(XkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< bool >::type condOut(condOutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    Rcpp::traits::input_parameter< int >::type len_beta(len_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_score_GLMM(sigma, Delta, eta, Nk_actual, Yki, Xki, IDk, Wki, condOut, GH_w, GH_z, len_beta));
    return rcpp_result_gen;
END_RCPP
}
// compute_score_GLMM_slopes
NumericVector compute_score_GLMM_slopes(NumericVector sigma, NumericVector Delta, NumericVector eta, NumericVector rand_indic, NumericVector Nk_actual, NumericVector Yki, NumericMatrix Xki, NumericVector IDk, NumericVector Wki, bool condOut, NumericVector GH_w, NumericVector GH_z, int len_beta);
RcppExport SEXP _JMMICSpack_compute_score_GLMM_slopes(SEXP sigmaSEXP, SEXP DeltaSEXP, SEXP etaSEXP, SEXP rand_indicSEXP, SEXP Nk_actualSEXP, SEXP YkiSEXP, SEXP XkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP condOutSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP, SEXP len_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rand_indic(rand_indicSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xki(XkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< bool >::type condOut(condOutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    Rcpp::traits::input_parameter< int >::type len_beta(len_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_score_GLMM_slopes(sigma, Delta, eta, rand_indic, Nk_actual, Yki, Xki, IDk, Wki, condOut, GH_w, GH_z, len_beta));
    return rcpp_result_gen;
END_RCPP
}
// compute_cheese_GLMM
NumericMatrix compute_cheese_GLMM(NumericVector sigma, NumericVector Delta, NumericVector eta, NumericVector Nk_actual, NumericVector Yki, NumericMatrix Xki, NumericVector IDk, NumericVector Wki, bool condOut, NumericVector GH_w, NumericVector GH_z, int len_beta);
RcppExport SEXP _JMMICSpack_compute_cheese_GLMM(SEXP sigmaSEXP, SEXP DeltaSEXP, SEXP etaSEXP, SEXP Nk_actualSEXP, SEXP YkiSEXP, SEXP XkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP condOutSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP, SEXP len_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xki(XkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< bool >::type condOut(condOutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    Rcpp::traits::input_parameter< int >::type len_beta(len_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_cheese_GLMM(sigma, Delta, eta, Nk_actual, Yki, Xki, IDk, Wki, condOut, GH_w, GH_z, len_beta));
    return rcpp_result_gen;
END_RCPP
}
// compute_cheese_GLMM_slopes
NumericMatrix compute_cheese_GLMM_slopes(NumericVector sigma, NumericVector Delta, NumericVector eta, NumericVector rand_indic, NumericVector Nk_actual, NumericVector Yki, NumericMatrix Xki, NumericVector IDk, NumericVector Wki, bool condOut, NumericVector GH_w, NumericVector GH_z, int len_beta);
RcppExport SEXP _JMMICSpack_compute_cheese_GLMM_slopes(SEXP sigmaSEXP, SEXP DeltaSEXP, SEXP etaSEXP, SEXP rand_indicSEXP, SEXP Nk_actualSEXP, SEXP YkiSEXP, SEXP XkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP condOutSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP, SEXP len_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rand_indic(rand_indicSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xki(XkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< bool >::type condOut(condOutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    Rcpp::traits::input_parameter< int >::type len_beta(len_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_cheese_GLMM_slopes(sigma, Delta, eta, rand_indic, Nk_actual, Yki, Xki, IDk, Wki, condOut, GH_w, GH_z, len_beta));
    return rcpp_result_gen;
END_RCPP
}
// compute_EB_GLMM
NumericVector compute_EB_GLMM(NumericVector sigma, NumericVector Delta, NumericVector Nk_actual, NumericVector Yki, NumericVector IDk, NumericVector Wki, NumericVector GH_w, NumericVector GH_z);
RcppExport SEXP _JMMICSpack_compute_EB_GLMM(SEXP sigmaSEXP, SEXP DeltaSEXP, SEXP Nk_actualSEXP, SEXP YkiSEXP, SEXP IDkSEXP, SEXP WkiSEXP, SEXP GH_wSEXP, SEXP GH_zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Nk_actual(Nk_actualSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yki(YkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDk(IDkSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wki(WkiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_w(GH_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type GH_z(GH_zSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_EB_GLMM(sigma, Delta, Nk_actual, Yki, IDk, Wki, GH_w, GH_z));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_JMMICSpack_compute_Omega", (DL_FUNC) &_JMMICSpack_compute_Omega, 5},
    {"_JMMICSpack_compute_Delta", (DL_FUNC) &_JMMICSpack_compute_Delta, 4},
    {"_JMMICSpack_compute_logLik_JMMICS", (DL_FUNC) &_JMMICSpack_compute_logLik_JMMICS, 12},
    {"_JMMICSpack_compute_score_JMMICS", (DL_FUNC) &_JMMICSpack_compute_score_JMMICS, 20},
    {"_JMMICSpack_compute_score_JMMICS_slopes", (DL_FUNC) &_JMMICSpack_compute_score_JMMICS_slopes, 21},
    {"_JMMICSpack_compute_cheese_JMMICS", (DL_FUNC) &_JMMICSpack_compute_cheese_JMMICS, 20},
    {"_JMMICSpack_compute_cheese_JMMICS_slopes", (DL_FUNC) &_JMMICSpack_compute_cheese_JMMICS_slopes, 21},
    {"_JMMICSpack_compute_EB_JMMICS", (DL_FUNC) &_JMMICSpack_compute_EB_JMMICS, 12},
    {"_JMMICSpack_compute_logLik_JMMICS_NegBin", (DL_FUNC) &_JMMICSpack_compute_logLik_JMMICS_NegBin, 13},
    {"_JMMICSpack_compute_score_JMMICS_NegBin", (DL_FUNC) &_JMMICSpack_compute_score_JMMICS_NegBin, 22},
    {"_JMMICSpack_compute_score_JMMICS_NegBin_slopes", (DL_FUNC) &_JMMICSpack_compute_score_JMMICS_NegBin_slopes, 23},
    {"_JMMICSpack_compute_cheese_JMMICS_NegBin", (DL_FUNC) &_JMMICSpack_compute_cheese_JMMICS_NegBin, 22},
    {"_JMMICSpack_compute_cheese_JMMICS_NegBin_slopes", (DL_FUNC) &_JMMICSpack_compute_cheese_JMMICS_NegBin_slopes, 23},
    {"_JMMICSpack_compute_EB_JMMICS_NegBin", (DL_FUNC) &_JMMICSpack_compute_EB_JMMICS_NegBin, 13},
    {"_JMMICSpack_compute_logLik_JMMICS_ZIP", (DL_FUNC) &_JMMICSpack_compute_logLik_JMMICS_ZIP, 14},
    {"_JMMICSpack_compute_score_JMMICS_ZIP", (DL_FUNC) &_JMMICSpack_compute_score_JMMICS_ZIP, 25},
    {"_JMMICSpack_compute_score_JMMICS_ZIP_slopes", (DL_FUNC) &_JMMICSpack_compute_score_JMMICS_ZIP_slopes, 26},
    {"_JMMICSpack_compute_cheese_JMMICS_ZIP", (DL_FUNC) &_JMMICSpack_compute_cheese_JMMICS_ZIP, 25},
    {"_JMMICSpack_compute_cheese_JMMICS_ZIP_slopes", (DL_FUNC) &_JMMICSpack_compute_cheese_JMMICS_ZIP_slopes, 26},
    {"_JMMICSpack_compute_EB_JMMICS_ZIP", (DL_FUNC) &_JMMICSpack_compute_EB_JMMICS_ZIP, 14},
    {"_JMMICSpack_compute_logLik_GLMM", (DL_FUNC) &_JMMICSpack_compute_logLik_GLMM, 8},
    {"_JMMICSpack_compute_score_GLMM", (DL_FUNC) &_JMMICSpack_compute_score_GLMM, 12},
    {"_JMMICSpack_compute_score_GLMM_slopes", (DL_FUNC) &_JMMICSpack_compute_score_GLMM_slopes, 13},
    {"_JMMICSpack_compute_cheese_GLMM", (DL_FUNC) &_JMMICSpack_compute_cheese_GLMM, 12},
    {"_JMMICSpack_compute_cheese_GLMM_slopes", (DL_FUNC) &_JMMICSpack_compute_cheese_GLMM_slopes, 13},
    {"_JMMICSpack_compute_EB_GLMM", (DL_FUNC) &_JMMICSpack_compute_EB_GLMM, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_JMMICSpack(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
